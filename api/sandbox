---@meta

---The sandbox API provides access to create programs in a sandbox and
---use the GT-MOS APIs. 
---
---Programs will be ran in a custom environment to ensure saftey.
---
------
---@class sandbox
sandbox = {}

---Creates a custom environment.
---
---The environment can be used to safeley run not trusted programs,
---or use custom GT-MOS APIs.
---
------
---@return table environment The virtual environment created.
function sandbox.makeEnvironment()
    -- Create a custom environment
    return {
        myVariable = 42,
        myFunction = function(x)
            return x * 2
        end
    }
end

---Creates a coroutine from a function.
---
---The coroutine will be sandboxed inside a custom environment.
---
--- > [!WARN]
--- > **This makes use of the deprecated `setfenv`!**
---
------
---@param func function The function to wrap
---@return thread coroutine The path coroutine from the files
------
---@see sandbox.makeEnvironment
function sandbox.makeProgramFunction(func)
    -- Load the program as a function with the custom environment
    setfenv(func, sandbox.makeEnvironment())
    return coroutine.create(func)
end

---Creates a coroutine from a file.
---
---The coroutine will be sandboxed inside a custom environment.
---
------
---@param path path The absolute path read from
---@return thread coroutine The path coroutine from the files
---@throws If the file path could not be found.
------
---@see sandbox.makeEnvironment
function sandbox.makeProgramFile(path)
    -- Load the program as a function with the custom environment
    local programFunction, errorString = loadfile(path, "bt", sandbox.makeEnvironment())
    if programFunction then
        return coroutine.create(programFunction)
    else
        error("Error loading program file: " .. tostring(errorString))
    end
end

return sandbox